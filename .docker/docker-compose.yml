version: "3.9"

services:
  # --------> MY-APP-Server <--------
  my-app:
    build:
      context: ../
      dockerfile: ./.docker/node.dockerfile
    image: my-app
    container_name: my-app
    restart: unless-stopped
    working_dir: /usr/src
    env_file: ../.env
    ports:
      - 5000:5000
    volumes:
      - my-app-volume:/usr
    networks:
      - my-network
    stdin_open: true
    tty: true


  # --------> MY-APP-MONGODB <--------
  my-mongo:
    image: mongo:latest
    container_name: my-mongo
    env_file:
      - ../.env
    environment:
      DB_PASS: password
      DB_USER: mongo
    restart: always
    networks:
      - my-network
    ports:
      - 27017:27017
    volumes:
      - my-mongodb-volume:/data/db


  # --------> MY-APP-MYSQL <--------
  # my-mysql:
  #   image: mysql:latest
  #   container_name: my-mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   volumes:
  #     - my-mysql-volume:/var/lib/mysql
  #   networks:
  #     - my-network
  #   env_file:
  #     - .env
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${ROOT_PASS}
  #     MYSQL_DATABASE: ${DB_NAME}
  #     MYSQL_USER: ${DB_USER}
  #     MYSQL_PASSWORD: ${DB_PASS}


  # --------> MY-APP-REDIS <--------
  my-redis:
    container_name: my-redis
    image: "bitnami/redis:latest"
    user: "root"
    env_file:
      - ../.env
    environment:
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis
    networks:
      - my-network
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - cache:/data

networks:
  my-network:
    name: my-network

volumes:
  my-app-volume:
  my-mongodb-volume:
  # my-mysql-volume:
  cache:
    driver: local
